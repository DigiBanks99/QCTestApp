/*
Deployment script for QCTestDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
/*
:setvar DatabaseName "QCTestDB"
:setvar DefaultFilePrefix "QCTestDB"
:setvar DefaultDataPath "D:\SQL\Data\"
:setvar DefaultLogPath "D:\SQL\Logs\"
*/

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS OFF,
                ANSI_PADDING OFF,
                ANSI_WARNINGS OFF,
                ARITHABORT OFF,
                CONCAT_NULL_YIELDS_NULL OFF,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER OFF,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT GLOBAL,
                RECOVERY SIMPLE,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY CHECKSUM,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [Security]...';


GO
CREATE SCHEMA [Security]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Shopping]...';


GO
CREATE SCHEMA [Shopping]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Security].[User]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [Security].[User] (
    [UserID]   INT          IDENTITY (1, 1) NOT NULL,
    [UserCode] VARCHAR (10) NOT NULL,
    [UserName] VARCHAR (20) NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY CLUSTERED ([UserID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [Shopping].[CartOrderRel]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [Shopping].[CartOrderRel] (
    [CartOrderRelID] INT IDENTITY (1, 1) NOT NULL,
    [CartID]         INT NOT NULL,
    [OrderID]        INT NOT NULL,
    CONSTRAINT [PK_CartOrderRel] PRIMARY KEY CLUSTERED ([CartOrderRelID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [Shopping].[Cart]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [Shopping].[Cart] (
    [CartID]       INT             IDENTITY (1, 1) NOT NULL,
    [UserID]       INT             NOT NULL,
    [CreationDate] SMALLDATETIME   NOT NULL,
    [CartTotal]    DECIMAL (18, 2) NOT NULL,
    [ItemCount]    INT             NOT NULL,
    [Status]       VARCHAR (1)     NOT NULL,
    CONSTRAINT [PK_Cart] PRIMARY KEY CLUSTERED ([CartID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [Shopping].[Category]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [Shopping].[Category] (
    [CategoryID]   INT          IDENTITY (1, 1) NOT NULL,
    [CategoryCode] VARCHAR (10) NOT NULL,
    [CategoryName] VARCHAR (15) NOT NULL,
    CONSTRAINT [PK_Category] PRIMARY KEY CLUSTERED ([CategoryID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [Shopping].[Wishlist]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [Shopping].[Wishlist] (
    [WishlistID] INT           IDENTITY (1, 1) NOT NULL,
    [UserID]     INT           NOT NULL,
    [ItemID]     INT           NOT NULL,
    [DateAdded]  SMALLDATETIME NOT NULL,
    [ListName]   VARCHAR (30)  NOT NULL,
    [CategoryID] INT           NULL,
    CONSTRAINT [PK_Wishlist] PRIMARY KEY CLUSTERED ([WishlistID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [Shopping].[Order]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [Shopping].[Order] (
    [OrderID]        INT             IDENTITY (1, 1) NOT NULL,
    [ItemID]         INT             NOT NULL,
    [Quantity]       INT             NOT NULL,
    [PricePerUnit]   DECIMAL (18, 2) NOT NULL,
    [Total]          DECIMAL (18, 2) NOT NULL,
    [Status]         VARCHAR (1)     NOT NULL,
    [OrderDate]      SMALLDATETIME   NOT NULL,
    [DispatchDate]   SMALLDATETIME   NULL,
    [CompletionDate] SMALLDATETIME   NULL,
    CONSTRAINT [PK_Order] PRIMARY KEY CLUSTERED ([OrderID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [Shopping].[Picture]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [Shopping].[Picture] (
    [PictureID] INT   IDENTITY (1, 1) NOT NULL,
    [ItemID]    INT   NOT NULL,
    [Picture]   IMAGE NOT NULL,
    CONSTRAINT [PK_PictureID] PRIMARY KEY CLUSTERED ([PictureID] ASC),
    CONSTRAINT [UK_Picture_Item] UNIQUE NONCLUSTERED ([ItemID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [Shopping].[Item]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [Shopping].[Item] (
    [ItemID]      INT             IDENTITY (1, 1) NOT NULL,
    [ItemCode]    VARCHAR (10)    NOT NULL,
    [ItemName]    VARCHAR (30)    NOT NULL,
    [Description] VARCHAR (MAX)   NOT NULL,
    [Price]       DECIMAL (18, 2) NOT NULL,
    CONSTRAINT [PK_Item] PRIMARY KEY CLUSTERED ([ItemID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating DF_Cart_Status...';


GO
ALTER TABLE [Shopping].[Cart]
    ADD CONSTRAINT [DF_Cart_Status] DEFAULT ('N') FOR [Status];


GO
PRINT N'Creating DF_Order_Status...';


GO
ALTER TABLE [Shopping].[Order]
    ADD CONSTRAINT [DF_Order_Status] DEFAULT ('N') FOR [Status];


GO
PRINT N'Creating FK_CartOrderRel_Cart...';


GO
ALTER TABLE [Shopping].[CartOrderRel]
    ADD CONSTRAINT [FK_CartOrderRel_Cart] FOREIGN KEY ([CartID]) REFERENCES [Shopping].[Cart] ([CartID]);


GO
PRINT N'Creating FK_CartOrderRel_Order...';


GO
ALTER TABLE [Shopping].[CartOrderRel]
    ADD CONSTRAINT [FK_CartOrderRel_Order] FOREIGN KEY ([OrderID]) REFERENCES [Shopping].[Order] ([OrderID]);


GO
PRINT N'Creating FK_Cart_User...';


GO
ALTER TABLE [Shopping].[Cart]
    ADD CONSTRAINT [FK_Cart_User] FOREIGN KEY ([UserID]) REFERENCES [Security].[User] ([UserID]);


GO
PRINT N'Creating FK_Wishlist_User...';


GO
ALTER TABLE [Shopping].[Wishlist]
    ADD CONSTRAINT [FK_Wishlist_User] FOREIGN KEY ([UserID]) REFERENCES [Security].[User] ([UserID]);


GO
PRINT N'Creating FK_Wishlist_Item...';


GO
ALTER TABLE [Shopping].[Wishlist]
    ADD CONSTRAINT [FK_Wishlist_Item] FOREIGN KEY ([ItemID]) REFERENCES [Shopping].[Item] ([ItemID]);


GO
PRINT N'Creating FK_Wishlist_Category...';


GO
ALTER TABLE [Shopping].[Wishlist]
    ADD CONSTRAINT [FK_Wishlist_Category] FOREIGN KEY ([CategoryID]) REFERENCES [Shopping].[Category] ([CategoryID]);


GO
PRINT N'Creating FK_Order_Item...';


GO
ALTER TABLE [Shopping].[Order]
    ADD CONSTRAINT [FK_Order_Item] FOREIGN KEY ([ItemID]) REFERENCES [Shopping].[Item] ([ItemID]);


GO
PRINT N'Creating FK_Picture_Item...';


GO
ALTER TABLE [Shopping].[Picture]
    ADD CONSTRAINT [FK_Picture_Item] FOREIGN KEY ([ItemID]) REFERENCES [Shopping].[Picture] ([ItemID]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cd4936ef-5e1d-4792-908f-0a28d19e00f6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cd4936ef-5e1d-4792-908f-0a28d19e00f6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e94100db-a083-4259-8e4d-9cc08dc9e1da')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e94100db-a083-4259-8e4d-9cc08dc9e1da')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4b588aff-67aa-4a59-b8bf-7d160dc23c3e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4b588aff-67aa-4a59-b8bf-7d160dc23c3e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '887452a7-330a-427b-8d3e-911395134695')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('887452a7-330a-427b-8d3e-911395134695')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c9c8df51-ccf9-4d78-977d-6802bf09265d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c9c8df51-ccf9-4d78-977d-6802bf09265d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c7e76740-7104-47c9-90e2-5003bf29b507')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c7e76740-7104-47c9-90e2-5003bf29b507')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
