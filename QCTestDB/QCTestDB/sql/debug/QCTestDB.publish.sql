/*
Deployment script for QCTestDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "QCTestDB"
:setvar DefaultFilePrefix "QCTestDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQL12\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQL12\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS OFF,
                ANSI_PADDING OFF,
                ANSI_WARNINGS OFF,
                ARITHABORT OFF,
                CONCAT_NULL_YIELDS_NULL OFF,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER OFF,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT GLOBAL,
                RECOVERY SIMPLE,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY CHECKSUM,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [Security]...';


GO
CREATE SCHEMA [Security]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Shopping]...';


GO
CREATE SCHEMA [Shopping]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Security].[User]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [Security].[User] (
    [UserID]   INT          IDENTITY (1, 1) NOT NULL,
    [Code]     VARCHAR (10) NOT NULL,
    [UserName] VARCHAR (20) NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY CLUSTERED ([UserID] ASC),
    CONSTRAINT [UK_User_UserCode] UNIQUE NONCLUSTERED ([Code] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [Shopping].[Cart]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [Shopping].[Cart] (
    [CartID]      INT             IDENTITY (1, 1) NOT NULL,
    [UserID]      INT             NOT NULL,
    [Code]        VARCHAR (10)    NOT NULL,
    [DateCreated] SMALLDATETIME   NOT NULL,
    [CartTotal]   DECIMAL (18, 2) NOT NULL,
    [ItemCount]   INT             NOT NULL,
    [Status]      VARCHAR (1)     NOT NULL,
    CONSTRAINT [PK_Cart] PRIMARY KEY CLUSTERED ([CartID] ASC),
    CONSTRAINT [UK_Cart_CartCode] UNIQUE NONCLUSTERED ([Code] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [Shopping].[CartOrderRel]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [Shopping].[CartOrderRel] (
    [CartOrderRelID] INT IDENTITY (1, 1) NOT NULL,
    [CartID]         INT NOT NULL,
    [OrderID]        INT NOT NULL,
    CONSTRAINT [PK_CartOrderRel] PRIMARY KEY CLUSTERED ([CartOrderRelID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [Shopping].[Category]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [Shopping].[Category] (
    [CategoryID]   INT          IDENTITY (1, 1) NOT NULL,
    [Code]         VARCHAR (10) NOT NULL,
    [CategoryName] VARCHAR (15) NOT NULL,
    CONSTRAINT [PK_Category] PRIMARY KEY CLUSTERED ([CategoryID] ASC),
    CONSTRAINT [UK_Category_CategoryCode] UNIQUE NONCLUSTERED ([Code] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [Shopping].[Item]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [Shopping].[Item] (
    [ItemID]           INT             IDENTITY (1, 1) NOT NULL,
    [Code]             VARCHAR (10)    NOT NULL,
    [ItemName]         VARCHAR (50)    NOT NULL,
    [ShortDescription] VARCHAR (100)   NOT NULL,
    [Description]      VARCHAR (MAX)   NOT NULL,
    [Price]            DECIMAL (18, 2) NOT NULL,
    [CategoryID]       INT             NOT NULL,
    CONSTRAINT [PK_Item] PRIMARY KEY CLUSTERED ([ItemID] ASC),
    CONSTRAINT [UK_Item_ItemCode] UNIQUE NONCLUSTERED ([Code] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [Shopping].[ItemPicture]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [Shopping].[ItemPicture] (
    [ItemPictureID] INT   IDENTITY (1, 1) NOT NULL,
    [ItemID]        INT   NOT NULL,
    [Picture]       IMAGE NOT NULL,
    CONSTRAINT [PK_ItemPictureID] PRIMARY KEY CLUSTERED ([ItemPictureID] ASC),
    CONSTRAINT [UK_ItemPicture_Item] UNIQUE NONCLUSTERED ([ItemID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [Shopping].[Order]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [Shopping].[Order] (
    [OrderID]        INT             IDENTITY (1, 1) NOT NULL,
    [ItemID]         INT             NOT NULL,
    [Quantity]       INT             NOT NULL,
    [PricePerUnit]   DECIMAL (18, 2) NOT NULL,
    [Total]          DECIMAL (18, 2) NOT NULL,
    [Status]         VARCHAR (1)     NOT NULL,
    [OrderDate]      SMALLDATETIME   NOT NULL,
    [DispatchDate]   SMALLDATETIME   NULL,
    [CompletionDate] SMALLDATETIME   NULL,
    CONSTRAINT [PK_Order] PRIMARY KEY CLUSTERED ([OrderID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [Shopping].[Wishlist]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [Shopping].[Wishlist] (
    [WishlistID]   INT           IDENTITY (1, 1) NOT NULL,
    [UserID]       INT           NOT NULL,
    [Code]         VARCHAR (10)  NOT NULL,
    [DateCreated]  SMALLDATETIME NOT NULL,
    [WishlistName] VARCHAR (30)  NOT NULL,
    [CategoryID]   INT           NULL,
    CONSTRAINT [PK_Wishlist] PRIMARY KEY CLUSTERED ([WishlistID] ASC),
    CONSTRAINT [UK_Whislist_WishlistCode] UNIQUE NONCLUSTERED ([Code] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [Shopping].[WishlistItem]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [Shopping].[WishlistItem] (
    [WishlistItemID] INT           IDENTITY (1, 1) NOT NULL,
    [WishlistID]     INT           NOT NULL,
    [ItemID]         INT           NOT NULL,
    [DateAdded]      SMALLDATETIME NOT NULL,
    CONSTRAINT [PK_WishlistItems] PRIMARY KEY CLUSTERED ([WishlistItemID] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating DF_Cart_Status...';


GO
ALTER TABLE [Shopping].[Cart]
    ADD CONSTRAINT [DF_Cart_Status] DEFAULT ('N') FOR [Status];


GO
PRINT N'Creating DF_Order_Status...';


GO
ALTER TABLE [Shopping].[Order]
    ADD CONSTRAINT [DF_Order_Status] DEFAULT ('N') FOR [Status];


GO
PRINT N'Creating FK_Cart_User...';


GO
ALTER TABLE [Shopping].[Cart]
    ADD CONSTRAINT [FK_Cart_User] FOREIGN KEY ([UserID]) REFERENCES [Security].[User] ([UserID]);


GO
PRINT N'Creating FK_CartOrderRel_Cart...';


GO
ALTER TABLE [Shopping].[CartOrderRel]
    ADD CONSTRAINT [FK_CartOrderRel_Cart] FOREIGN KEY ([CartID]) REFERENCES [Shopping].[Cart] ([CartID]);


GO
PRINT N'Creating FK_CartOrderRel_Order...';


GO
ALTER TABLE [Shopping].[CartOrderRel]
    ADD CONSTRAINT [FK_CartOrderRel_Order] FOREIGN KEY ([OrderID]) REFERENCES [Shopping].[Order] ([OrderID]);


GO
PRINT N'Creating FK_ItemPicture_Item...';


GO
ALTER TABLE [Shopping].[ItemPicture]
    ADD CONSTRAINT [FK_ItemPicture_Item] FOREIGN KEY ([ItemID]) REFERENCES [Shopping].[Item] ([ItemID]);


GO
PRINT N'Creating FK_Order_Item...';


GO
ALTER TABLE [Shopping].[Order]
    ADD CONSTRAINT [FK_Order_Item] FOREIGN KEY ([ItemID]) REFERENCES [Shopping].[Item] ([ItemID]);


GO
PRINT N'Creating FK_Wishlist_Category...';


GO
ALTER TABLE [Shopping].[Wishlist]
    ADD CONSTRAINT [FK_Wishlist_Category] FOREIGN KEY ([CategoryID]) REFERENCES [Shopping].[Category] ([CategoryID]);


GO
PRINT N'Creating FK_Wishlist_User...';


GO
ALTER TABLE [Shopping].[Wishlist]
    ADD CONSTRAINT [FK_Wishlist_User] FOREIGN KEY ([UserID]) REFERENCES [Security].[User] ([UserID]);


GO
PRINT N'Creating FK_WishlistItems_Item...';


GO
ALTER TABLE [Shopping].[WishlistItem]
    ADD CONSTRAINT [FK_WishlistItems_Item] FOREIGN KEY ([ItemID]) REFERENCES [Shopping].[Item] ([ItemID]);


GO
PRINT N'Creating FK_WishlistItems_Wishlist...';


GO
ALTER TABLE [Shopping].[WishlistItem]
    ADD CONSTRAINT [FK_WishlistItems_Wishlist] FOREIGN KEY ([WishlistID]) REFERENCES [Shopping].[Wishlist] ([WishlistID]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e9c211ca-b16c-454a-abcd-e5c5aa53572d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e9c211ca-b16c-454a-abcd-e5c5aa53572d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '520f72e6-22d9-4dd5-9899-a7daf4329362')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('520f72e6-22d9-4dd5-9899-a7daf4329362')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'dc3f3bbc-39e3-4ce2-8041-482532c3f7a5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('dc3f3bbc-39e3-4ce2-8041-482532c3f7a5')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e7ad277d-5b4f-42fa-9c58-a25fe1ca1ee5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e7ad277d-5b4f-42fa-9c58-a25fe1ca1ee5')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8bf98b77-394b-4398-8168-3782a03c3d6d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8bf98b77-394b-4398-8168-3782a03c3d6d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4340540f-deec-4ac1-aefb-383f9b2c2a5a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4340540f-deec-4ac1-aefb-383f9b2c2a5a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'efd91e6f-42f1-41ed-8d0d-3c3a5e84ebdc')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('efd91e6f-42f1-41ed-8d0d-3c3a5e84ebdc')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5c4526a1-cd64-4f87-9c11-b2c7372bc80d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5c4526a1-cd64-4f87-9c11-b2c7372bc80d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1522ca2f-6d48-4abb-9196-806e3fc68df1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1522ca2f-6d48-4abb-9196-806e3fc68df1')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
